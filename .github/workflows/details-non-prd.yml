name: Ruby Gem

on:
  push:
    branches: [ dev-dev ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
    - name: set up env
      run: echo "ENV_NAME=$( [ "$GITHUB_REF" == "refs/heads/master" ] && echo 'uat' || echo ${GITHUB_REF##*/} )" >> $GITHUB_ENV
    
    - uses: actions/checkout@v2
    - name: Set up Ruby 2.5
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.5'
        
#     - name: Test & Build Ruby
#       run: gem install bundler
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
          push: true
          tags: ghcr.io/wavemoroc001/details:${{ env.ENV_NAME }}

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "ENV_NAME=$( [ "$GITHUB_REF" == "refs/heads/master" ] && echo 'uat' || echo ${GITHUB_REF##*/} )" >> $GITHUB_ENV
      - name: get-credentials
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: k8s
          location: asia-southeast1-b
          credentials: ${{ secrets.GKE_CREDENTIALS }}
      - name: deploy
        uses: deliverybot/helm@v1
        with:
          helm: helm3
          release: details-${{ env.ENV_NAME }}
          namespace: student50-details-${{ env.ENV_NAME }}
          chart: k8s/helm
          value-files: k8s/helm-values/values-details-${{ env.ENV_NAME }}.yaml
          values: |
            {
              "extraEnv": {
                "COMMIT_SHA": "${{ github.sha }}"
              }
            }
  # acceptance-test:
  #   needs: deploy
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Set env
  #       run: echo "ENV_NAME=$( [ "$GITHUB_REF" == "refs/heads/master" ] && echo 'uat' || echo ${GITHUB_REF##*/} )" >> $GITHUB_ENV
  #     - name: Check health check page
  #       run: curl http://bookinfo.${{ env.ENV_NAME }}.opsta.net/student50/details/health | grep "Ratings is working"
